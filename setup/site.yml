---
- name: Set Up Environment
  hosts: localhost
  become: no
  vars:
    OS_FAMILY_LINUX:
      - "Debian"
      - "RedHat"
      - "Suse"
    PACKAGES_TO_INSTALL:
      - fzf
      - bat
      - zoxide
      - ripgrep
      - neovim
      - uv
      - kubectl
      - kubecm
      - helm
      - powerlevel10k

    FONT_BASE_NAME: "MesloLGS%20NF"
    FONT_FACES:
      - "Regular"
      - "Bold"
      - "Italic"
      - "Bold%20Italic"

  tasks:
  # Common Packages
  - name: Install Common Packages
    community.general.homebrew:
      name: "{{ PACKAGES_TO_INSTALL }}"
      state: present
        
  # Platform Specific Packages
  - name: Install Podman [Linux]
    when: ansible_facts['os_family'] in OS_FAMILY_LINUX
    community.general.homebrew:
      name: podman
      state: present

  - name: Install Orbstack [Mac]
    when: ansible_facts['os_family'] == "Darwin"
    community.general.homebrew:
      name: orbstack
      state: present
      state: present

  # Utility Setup
  - name: Set up fzf shell integration
    ansible.builtin.lineinfile:
      create: true
      path: $HOME/.zshrc
      regexp: 'source\s+<\s*\(\s*fzf\s+--zsh\s*\)\s*'
      line: "source <(fzf --zsh)"

  - name: download fzf-git integrations
    ansible.builtin.git:
      repo: https://github.com/junegunn/fzf-git.sh
      dest: $HOME/.config/fzf-git
        
  - name: add fzf-git to zshrc
    ansible.builtin.lineinfile:
      create: true
      path: $HOME/.zshrc
      regexp: 'source\s+\$HOME/.config/fzf-git/fzf-git.sh'
      line: 'source $HOME/.config/fzf-git/fzf-git.sh'

  - name: Setup zoxide
    ansible.builtin.lineinfile:
      create: true
      path: $HOME/.zshrc
      regexp: 'eval\s+\(\s*zoxide\s+init\s+zsh\s*\)'
      line: 'eval "$(zoxide init zsh)"'


  # Shell Visual Customization
  - name: Set Up Powerlevel10k
    ansible.builtin.lineinfile:
     create: true
     path: $HOME/.zshrc
     regexp: 'source\s+.*powerlevel10k.zsh-theme'
     line: "source {{ ansible_env.HOMEBREW_PREFIX }}/share/powerlevel10k/powerlevel10k.zsh-theme"

  tasks:
  - name: Check if fonts directory exists
    ansible.builtin.stat:
      path: $HOME/.fonts
    register: result
  
  - name: Create directory if it does not exist
    when: not result.stat.exists
    ansible.builtin.file:
      path: $HOME/.fonts
      state: directory

  - name: Download Fonts
    ansible.builtin.get_url:
      url: "https://github.com/romkatv/powerlevel10k-media/raw/master/{{FONT_BASE_NAME}}%20{{ item }}.ttf"
      dest: "$HOME/.fonts/{{ FONT_BASE_NAME | urldecode }} {{ item | urldecode}}.ttf"
    loop: "{{ FONT_FACES }}"


  - name: Determine if GUI exists (to refresh font cache)
    ansible.builtin.find:
      paths: /usr/bin
      file_type: any
      use_regex: yes
      patterns: '.*session'
    register: result

  - name: Refresh Font Cache
    when: find_matches is defined
    become: true
    ansible.builtin.shell: fc-cache -f -v
      
## (TODO): Install dotfiles
